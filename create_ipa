#!/usr/bin/env python3
import os
import glob
import argparse
import shutil
import subprocess
import tempfile

def find_app_directory(base_dir, target="x86_64-apple-ios", debug="debug"):
    search_path = os.path.join(base_dir, target, debug, "bundle", "ios", "*.app")
    app_directories = glob.glob(search_path)

    if app_directories:
        for app_dir in app_directories:
            return app_dir
    else:
       return None

def create_temp_payload_folder(source_path):
    temp_dir = tempfile.mkdtemp()

    payload_folder = os.path.join(temp_dir, "Payload")
    os.makedirs(payload_folder)

    for item in os.listdir(source_path):
        s = os.path.join(source_path, item)
        d = os.path.join(payload_folder, item)
        shutil.move(s, d)

    return payload_folder

def zip_payload(output_filename, payload_folder):
    current_dir = os.getcwd()
    ipa_file_path = os.path.join(current_dir, f"{output_filename}.ipa")

    temp_dir = os.path.dirname(payload_folder)

    zip_command = f"ls '{temp_dir}/Payload' && cd '{temp_dir}' && zip -rmq '{ipa_file_path}' . -i 'Payload/*'"

    process = subprocess.run(zip_command, shell=True)

    if process.returncode == 0:
        print(f"Successfully created '{ipa_file_path}'")
    else:
        print("Failed to create the IPA file.")


def main():
    parser = argparse.ArgumentParser(description='Search for .app directory.')
    parser.add_argument('--target', type=str, default="x86_64-apple-ios", help='Set the target directory')
    parser.add_argument('--release', '-r', action='store_true', help='Set debug mode to release')
    args = parser.parse_args()

    target = args.target
    debug = "release" if args.release else "debug"

    base_dir = "target"
    path = find_app_directory(base_dir, target, debug)
    app_name = os.path.basename(path)
    app_name = app_name[:-4] if app_name.endswith('.app') else app_name
    path = create_temp_payload_folder(path)
    zip_payload(app_name, path)
if __name__ == "__main__":
    main()
